"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1161],{8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>a});var i=r(6540);const o={},s=i.createContext(o);function t(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),i.createElement(s.Provider,{value:n},e.children)}},9144:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"advanced2","title":"Advanced Topic 2: Deployment Strategies","description":"Learn about different deployment strategies for your Docusaurus site.","source":"@site/docs/advanced2.md","sourceDirName":".","slug":"/advanced2","permalink":"/Docusaurus/docs/advanced2","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/advanced2.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Advanced Topic 1: Performance Optimization","permalink":"/Docusaurus/docs/advanced1"}}');var o=r(4848),s=r(8453);const t={sidebar_position:2},a="Advanced Topic 2: Deployment Strategies",c={},l=[{value:"Continuous Integration",id:"continuous-integration",level:2},{value:"GitHub Actions",id:"github-actions",level:3},{value:"Docker Deployment",id:"docker-deployment",level:2},{value:"Dockerfile",id:"dockerfile",level:3},{value:"Docker Compose",id:"docker-compose",level:3},{value:"Cloud Deployment",id:"cloud-deployment",level:2},{value:"AWS Amplify",id:"aws-amplify",level:3},{value:"Netlify",id:"netlify",level:3},{value:"Monitoring",id:"monitoring",level:2},{value:"Health Checks",id:"health-checks",level:3},{value:"Performance Monitoring",id:"performance-monitoring",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"advanced-topic-2-deployment-strategies",children:"Advanced Topic 2: Deployment Strategies"})}),"\n",(0,o.jsx)(n.p,{children:"Learn about different deployment strategies for your Docusaurus site."}),"\n",(0,o.jsx)(n.h2,{id:"continuous-integration",children:"Continuous Integration"}),"\n",(0,o.jsx)(n.h3,{id:"github-actions",children:"GitHub Actions"}),"\n",(0,o.jsx)(n.p,{children:"Set up automated deployments with GitHub Actions:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"name: Deploy to GitHub Pages\r\non:\r\n  push:\r\n    branches: [main]\r\njobs:\r\n  deploy:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - uses: actions/checkout@v3\r\n      - uses: actions/setup-node@v3\r\n        with:\r\n          node-version: '18'\r\n      - name: Install dependencies\r\n        run: npm ci\r\n      - name: Build website\r\n        run: npm run build\r\n      - name: Deploy to GitHub Pages\r\n        uses: peaceiris/actions-gh-pages@v3\r\n        with:\r\n          github_token: ${{ secrets.GITHUB_TOKEN }}\r\n          publish_dir: ./build\n"})}),"\n",(0,o.jsx)(n.h2,{id:"docker-deployment",children:"Docker Deployment"}),"\n",(0,o.jsx)(n.h3,{id:"dockerfile",children:"Dockerfile"}),"\n",(0,o.jsx)(n.p,{children:"Create a Docker container for your site:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dockerfile",children:'FROM node:18-alpine\r\nWORKDIR /app\r\nCOPY package*.json ./\r\nRUN npm install\r\nCOPY . .\r\nRUN npm run build\r\nEXPOSE 3000\r\nCMD ["npm", "run", "serve"]\n'})}),"\n",(0,o.jsx)(n.h3,{id:"docker-compose",children:"Docker Compose"}),"\n",(0,o.jsx)(n.p,{children:"Set up with Docker Compose:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"version: '3'\r\nservices:\r\n  docusaurus:\r\n    build: .\r\n    ports:\r\n      - \"3000:3000\"\r\n    volumes:\r\n      - ./docs:/app/docs\n"})}),"\n",(0,o.jsx)(n.h2,{id:"cloud-deployment",children:"Cloud Deployment"}),"\n",(0,o.jsx)(n.h3,{id:"aws-amplify",children:"AWS Amplify"}),"\n",(0,o.jsx)(n.p,{children:"Deploy to AWS Amplify:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"version: 1\r\nfrontend:\r\n  phases:\r\n    preBuild:\r\n      commands:\r\n        - npm ci\r\n    build:\r\n      commands:\r\n        - npm run build\r\n  artifacts:\r\n    baseDirectory: build\r\n    files:\r\n      - '**/*'\r\n  cache:\r\n    paths:\r\n      - node_modules/**/*\n"})}),"\n",(0,o.jsx)(n.h3,{id:"netlify",children:"Netlify"}),"\n",(0,o.jsx)(n.p,{children:"Configure Netlify deployment:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[build]\r\n  command = "npm run build"\r\n  publish = "build"\r\n  environment = { NODE_VERSION = "18" }\r\n\r\n[[redirects]]\r\n  from = "/*"\r\n  to = "/index.html"\r\n  status = 200\n'})}),"\n",(0,o.jsx)(n.h2,{id:"monitoring",children:"Monitoring"}),"\n",(0,o.jsx)(n.h3,{id:"health-checks",children:"Health Checks"}),"\n",(0,o.jsx)(n.p,{children:"Implement basic health monitoring:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"app.get('/health', (req, res) => {\r\n  res.status(200).json({\r\n    status: 'healthy',\r\n    timestamp: new Date().toISOString()\r\n  });\r\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"performance-monitoring",children:"Performance Monitoring"}),"\n",(0,o.jsx)(n.p,{children:"Set up performance tracking:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"console.log('Performance monitoring setup here');\r\n// Add your preferred monitoring solution\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);